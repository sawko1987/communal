import PyInstaller.__main__
import os
import shutil
import time
import sys
import tempfile
import json
from pathlib import Path
from datetime import datetime

def safe_remove_dir(dir_path):
    """–ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å –ø–æ–≤—Ç–æ—Ä–Ω—ã–º–∏ –ø–æ–ø—ã—Ç–∫–∞–º–∏"""
    if os.path.exists(dir_path):
        max_attempts = 3
        for attempt in range(max_attempts):
            try:
                shutil.rmtree(dir_path)
                print(f"–£—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {dir_path}")
                return True
            except PermissionError:
                print(f"–ü–æ–ø—ã—Ç–∫–∞ {attempt + 1}/{max_attempts}: –ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ {dir_path}")
                if attempt < max_attempts - 1:
                    time.sleep(1)
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ {dir_path}: {e}")
                return False
    return True

def get_version():
    """–ü–æ–ª—É—á–∞–µ—Ç –≤–µ—Ä—Å–∏—é –∏–∑ —Ñ–∞–π–ª–∞ version.txt"""
    try:
        with open('version.txt', 'r', encoding='utf-8') as f:
            return f.read().strip()
    except:
        return "1.0.0"

def create_update_info():
    """–°–æ–∑–¥–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏"""
    version = get_version()
    update_info = {
        "version": version,
        "build_date": datetime.now().isoformat(),
        "features": [
            "–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ä–µ–µ—Å—Ç—Ä–æ–≤ –ø–æ –≤—Å–µ–º –∞–±–æ–Ω–µ–Ω—Ç–∞–º",
            "–£–ª—É—á—à–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —Å –≤–∫–ª–∞–¥–∫–∞–º–∏",
            "–°–∏—Å—Ç–µ–º–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –±–µ–∑ –ø–æ—Ç–µ—Ä–∏ –¥–∞–Ω–Ω—ã—Ö"
        ]
    }
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏
    with open('update_info.json', 'w', encoding='utf-8') as f:
        json.dump(update_info, f, indent=2, ensure_ascii=False)
    
    return update_info

def build_exe():
    print("üöÄ –ù–∞—á–∞–ª–æ —Å–±–æ—Ä–∫–∏ ComunalKorm...")
    
    # –ü–æ–ª—É—á–∞–µ–º –≤–µ—Ä—Å–∏—é
    version = get_version()
    print(f"üìã –í–µ—Ä—Å–∏—è: {version}")
    
    # –ü–æ–ª—É—á–∞–µ–º –∞–±—Å–æ–ª—é—Ç–Ω—ã–π –ø—É—Ç—å –∫ —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    current_dir = os.path.abspath(os.path.dirname(__file__))
    
    # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è —Å–±–æ—Ä–∫–∏
    temp_dir = tempfile.mkdtemp()
    print(f"üìÅ –°–æ–∑–¥–∞–Ω–∞ –≤—Ä–µ–º–µ–Ω–Ω–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {temp_dir}")
    
    try:
        # –ö–æ–ø–∏—Ä—É–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∞–π–ª—ã –≤–æ –≤—Ä–µ–º–µ–Ω–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
        files_to_copy = [
            'main.py', 'users_db.py', 'HistoryWindow.py', 'add_abonent_window.py', 
            'monthly_data_window.py', 'edit_abonent_window.py', 'settings_window.py',
            'updater.py', 'version.txt', 'requirements.txt'
        ]
        
        dirs_to_copy = ['image', 'data']
        
        for item in files_to_copy:
            src_path = os.path.join(current_dir, item)
            dst_path = os.path.join(temp_dir, item)
            if os.path.exists(src_path):
                shutil.copy2(src_path, dst_path)
                print(f"üìÑ –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω —Ñ–∞–π–ª: {item}")
        
        for item in dirs_to_copy:
            src_path = os.path.join(current_dir, item)
            dst_path = os.path.join(temp_dir, item)
            if os.path.exists(src_path):
                shutil.copytree(src_path, dst_path)
                print(f"üìÅ –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞ –ø–∞–ø–∫–∞: {item}")
        
        # –°–æ–∑–¥–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏
        update_info = create_update_info()
        print(f"üìù –°–æ–∑–¥–∞–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏: {update_info['version']}")
        
        # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤–æ –≤—Ä–µ–º–µ–Ω–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
        os.chdir(temp_dir)
        print("üîÑ –ü–µ—Ä–µ—Ö–æ–¥ –≤–æ –≤—Ä–µ–º–µ–Ω–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é")
        
        # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É data, –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
        if not os.path.exists('data'):
            os.makedirs('data')
            print("üìÅ –°–æ–∑–¥–∞–Ω–∞ –ø–∞–ø–∫–∞ data")

        print("üî® –ó–∞–ø—É—Å–∫ PyInstaller...")
        # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã —Å–±–æ—Ä–∫–∏
        PyInstaller.__main__.run([
            'main.py',
            '--name=ComunalKorm',
            '--onefile',
            '--windowed',
            '--icon=image/korm.ico',
            '--add-data=image;image',
            '--add-data=data;data',
            '--add-data=version.txt;.',
            '--add-data=update_info.json;.',
            '--hidden-import=pandas',
            '--hidden-import=numpy',
            '--hidden-import=sqlite3',
            '--hidden-import=docx',
            '--hidden-import=CTkMessagebox',
            '--hidden-import=customtkinter',
            '--clean',
            '--noconfirm'
        ])
        
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –∏—Å—Ö–æ–¥–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
        os.chdir(current_dir)
        
        # –ö–æ–ø–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—É—é –ø–∞–ø–∫—É dist
        temp_dist = os.path.join(temp_dir, 'dist')
        original_dist = os.path.join(current_dir, 'dist')
        
        if os.path.exists(original_dist):
            safe_remove_dir(original_dist)
        
        if os.path.exists(temp_dist):
            shutil.copytree(temp_dist, original_dist)
            print(f"‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç —Å–±–æ—Ä–∫–∏ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –≤ {original_dist}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: –ø–∞–ø–∫–∞ {temp_dist} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            return
        
        # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
        updates_dir = os.path.join(current_dir, 'updates')
        if not os.path.exists(updates_dir):
            os.makedirs(updates_dir)
        
        # –ö–æ–ø–∏—Ä—É–µ–º exe-—Ñ–∞–π–ª –≤ –ø–∞–ø–∫—É –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
        exe_name = f"ComunalKorm_v{version}.exe"
        exe_source = os.path.join(original_dist, 'ComunalKorm.exe')
        exe_dest = os.path.join(updates_dir, exe_name)
        
        if os.path.exists(exe_source):
            shutil.copy2(exe_source, exe_dest)
            print(f"üíæ –°–æ–∑–¥–∞–Ω–∞ –≤–µ—Ä—Å–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: {exe_name}")
        
        print("\nüéâ –°–±–æ—Ä–∫–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
        print(f"üì¶ –ò—Å–ø–æ–ª–Ω—è–µ–º—ã–π —Ñ–∞–π–ª: dist/ComunalKorm.exe")
        print(f"üîÑ –í–µ—Ä—Å–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: updates/{exe_name}")
        print(f"üìã –í–µ—Ä—Å–∏—è: {version}")
        
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±–æ—Ä–∫–µ: {e}")
        import traceback
        traceback.print_exc()
        sys.exit(1)
    finally:
        # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
        try:
            if os.path.exists(temp_dir):
                shutil.rmtree(temp_dir)
                print(f"üóëÔ∏è –í—Ä–µ–º–µ–Ω–Ω–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —É–¥–∞–ª–µ–Ω–∞: {temp_dir}")
        except Exception as e:
            print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –≤—Ä–µ–º–µ–Ω–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é: {e}")

if __name__ == '__main__':
    build_exe() 