#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –ø—Ä–æ–≥—Ä–∞–º–º—ã ComunalKorm
"""

import os
import sys
import shutil
import json
import zipfile
from datetime import datetime
from pathlib import Path

def get_version():
    """–ü–æ–ª—É—á–∞–µ—Ç –≤–µ—Ä—Å–∏—é –∏–∑ —Ñ–∞–π–ª–∞ version.txt"""
    try:
        with open('version.txt', 'r', encoding='utf-8') as f:
            return f.read().strip()
    except:
        return "1.0.0"

def create_update_package():
    """–°–æ–∑–¥–∞–µ—Ç –ø–∞–∫–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è"""
    print("üöÄ –°–æ–∑–¥–∞–Ω–∏–µ –ø–∞–∫–µ—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è...")
    
    version = get_version()
    print(f"üìã –í–µ—Ä—Å–∏—è: {version}")
    
    # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π, –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
    updates_dir = "updates"
    os.makedirs(updates_dir, exist_ok=True)
    
    # –ò–º—è —Ñ–∞–π–ª–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    update_filename = f"ComunalKorm_v{version}_update.zip"
    update_path = os.path.join(updates_dir, update_filename)
    
    try:
        # –°–æ–∑–¥–∞–µ–º ZIP-–∞—Ä—Ö–∏–≤ —Å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º
        with zipfile.ZipFile(update_path, 'w', zipfile.ZIP_DEFLATED) as zipf:
            
            # –î–æ–±–∞–≤–ª—è–µ–º exe-—Ñ–∞–π–ª
            exe_source = os.path.join("dist", "ComunalKorm.exe")
            if os.path.exists(exe_source):
                zipf.write(exe_source, "ComunalKorm.exe")
                print(f"üì¶ –î–æ–±–∞–≤–ª–µ–Ω exe-—Ñ–∞–π–ª")
            else:
                print(f"‚ùå –§–∞–π–ª {exe_source} –Ω–µ –Ω–∞–π–¥–µ–Ω")
                return False
            
            # –î–æ–±–∞–≤–ª—è–µ–º —Ñ–∞–π–ª –≤–µ—Ä—Å–∏–∏
            version_file = "version.txt"
            if os.path.exists(version_file):
                zipf.write(version_file, "version.txt")
                print(f"üìÑ –î–æ–±–∞–≤–ª–µ–Ω —Ñ–∞–π–ª –≤–µ—Ä—Å–∏–∏")
            
            # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏
            update_info_file = "update_info.json"
            if os.path.exists(update_info_file):
                zipf.write(update_info_file, "update_info.json")
                print(f"üìã –î–æ–±–∞–≤–ª–µ–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏")
            
            # –î–æ–±–∞–≤–ª—è–µ–º README —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏
            readme_content = f"""# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ ComunalKorm v{version}

## –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —É—Å—Ç–∞–Ω–æ–≤–∫–µ

1. **–ó–∞–∫—Ä–æ–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ ComunalKorm** (–µ—Å–ª–∏ –∑–∞–ø—É—â–µ–Ω–æ)
2. **–°–æ–∑–¥–∞–π—Ç–µ —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é** –ø–∞–ø–∫–∏ data (–µ—Å–ª–∏ –µ—Å—Ç—å –≤–∞–∂–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ)
3. **–†–∞—Å–ø–∞–∫—É–π—Ç–µ –∞—Ä—Ö–∏–≤** –≤ –ø–∞–ø–∫—É —Å –ø—Ä–æ–≥—Ä–∞–º–º–æ–π
4. **–ó–∞–º–µ–Ω–∏—Ç–µ —Ñ–∞–π–ª ComunalKorm.exe** –Ω–∞ –Ω–æ–≤—ã–π
5. **–ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É**

## –ù–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –≤ –≤–µ—Ä—Å–∏–∏ {version}

- –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ä–µ–µ—Å—Ç—Ä–æ–≤ –ø–æ –≤—Å–µ–º –∞–±–æ–Ω–µ–Ω—Ç–∞–º
- –£–ª—É—á—à–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —Å –≤–∫–ª–∞–¥–∫–∞–º–∏
- –°–∏—Å—Ç–µ–º–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –±–µ–∑ –ø–æ—Ç–µ—Ä–∏ –¥–∞–Ω–Ω—ã—Ö
- –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ

## –í–∞–∂–Ω–æ

- –í—Å–µ –¥–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤ –ø–∞–ø–∫–µ data
- –ü—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ –Ω–æ–≤–æ–π –≤–µ—Ä—Å–∏–∏ —Å–æ–∑–¥–∞–µ—Ç—Å—è —Ä–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è
- –ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–Ω—É—Ç –ø—Ä–æ–±–ª–µ–º—ã, –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ –ø–∞–ø–∫–∏ data/backup

## –ü–æ–¥–¥–µ—Ä–∂–∫–∞

–ü—Ä–∏ –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏–∏ –ø—Ä–æ–±–ª–µ–º –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É.
"""
            
            zipf.writestr("README_UPDATE.txt", readme_content)
            print(f"üìñ –î–æ–±–∞–≤–ª–µ–Ω–∞ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—é")
        
        print(f"‚úÖ –ü–∞–∫–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–æ–∑–¥–∞–Ω: {update_filename}")
        print(f"üìÅ –†–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ: {update_path}")
        
        # –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø–∞–∫–µ—Ç–µ
        package_info = {
            "version": version,
            "filename": update_filename,
            "size": os.path.getsize(update_path),
            "created": datetime.now().isoformat(),
            "files": [
                "ComunalKorm.exe",
                "version.txt",
                "update_info.json",
                "README_UPDATE.txt"
            ]
        }
        
        info_filename = f"package_info_v{version}.json"
        info_path = os.path.join(updates_dir, info_filename)
        
        with open(info_path, 'w', encoding='utf-8') as f:
            json.dump(package_info, f, indent=2, ensure_ascii=False)
        
        print(f"üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–∞–∫–µ—Ç–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞: {info_filename}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–∞–∫–µ—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: {e}")
        return False

def create_installer_script():
    """–°–æ–∑–¥–∞–µ—Ç —Å–∫—Ä–∏–ø—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è"""
    version = get_version()
    
    # –°–æ–∑–¥–∞–µ–º bat-—Ñ–∞–π–ª –¥–ª—è Windows
    bat_content = f"""@echo off
echo ========================================
echo –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ ComunalKorm v{version}
echo ========================================
echo.

echo –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –ø—Ä–æ–≥—Ä–∞–º–º—ã...
if not exist "ComunalKorm.exe" (
    echo –û–®–ò–ë–ö–ê: –§–∞–π–ª ComunalKorm.exe –Ω–µ –Ω–∞–π–¥–µ–Ω!
    echo –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –ø–∞–ø–∫–µ —Å –ø—Ä–æ–≥—Ä–∞–º–º–æ–π.
    pause
    exit /b 1
)

echo –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏...
if not exist "data" mkdir data
if not exist "data\\backup" mkdir data\\backup

set timestamp=%date:~-4,4%%date:~-10,2%%date:~-7,2%_%time:~0,2%%time:~3,2%%time:~6,2%
set timestamp=%timestamp: =0%

if exist "data\\abonent.db" (
    copy "data\\abonent.db" "data\\backup\\abonent_backup_%timestamp%.db" >nul
    echo –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ–∑–¥–∞–Ω–∞: abonent_backup_%timestamp%.db
)

echo –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è...
copy "ComunalKorm.exe" "ComunalKorm_old.exe" >nul
echo –°—Ç–∞—Ä–∞—è –≤–µ—Ä—Å–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –∫–∞–∫ ComunalKorm_old.exe

echo.
echo ========================================
echo –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!
echo ========================================
echo.
echo –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É.
pause
"""
    
    bat_filename = f"update_installer_v{version}.bat"
    bat_path = os.path.join("updates", bat_filename)
    
    with open(bat_path, 'w', encoding='cp866') as f:
        f.write(bat_content)
    
    print(f"üìú –°–æ–∑–¥–∞–Ω —Å–∫—Ä–∏–ø—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∏: {bat_filename}")
    return bat_path

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üîß –°–æ–∑–¥–∞–Ω–∏–µ –ø–∞–∫–µ—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è ComunalKorm...")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Å–æ–±—Ä–∞–Ω–Ω–æ–≥–æ exe-—Ñ–∞–π–ª–∞
    exe_path = os.path.join("dist", "ComunalKorm.exe")
    if not os.path.exists(exe_path):
        print("‚ùå –û—à–∏–±–∫–∞: –§–∞–π–ª ComunalKorm.exe –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–∞–ø–∫–µ dist")
        print("–°–Ω–∞—á–∞–ª–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ —Å–±–æ—Ä–∫—É –ø—Ä–æ–≥—Ä–∞–º–º—ã: python build.py")
        return
    
    # –°–æ–∑–¥–∞–µ–º –ø–∞–∫–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    if create_update_package():
        # –°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–ø—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∏
        installer_path = create_installer_script()
        
        print("\nüéâ –ü–∞–∫–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!")
        print("=" * 50)
        print("üì¶ –§–∞–π–ª—ã –¥–ª—è —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è:")
        print(f"   - updates/ComunalKorm_v{get_version()}_update.zip")
        print(f"   - updates/update_installer_v{get_version()}.bat")
        print("\nüìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:")
        print("1. –†–∞—Å–ø–∞–∫—É–π—Ç–µ ZIP-–∞—Ä—Ö–∏–≤")
        print("2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ bat-—Ñ–∞–π–ª –æ—Ç –∏–º–µ–Ω–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞")
        print("3. –°–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º –Ω–∞ —ç–∫—Ä–∞–Ω–µ")
    else:
        print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–∞–∫–µ—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è")

if __name__ == "__main__":
    main() 